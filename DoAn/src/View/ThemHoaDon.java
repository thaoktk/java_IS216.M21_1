/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import BUS.KhuyenMaiBUS;
import BUS.NhanVienBUS;
import BUS.SanPhamBUS;
import DTO.KhuyenMai;
import DTO.SanPham;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author asus
 */
public class ThemHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form ThemHoaDon
     */
    String user;
    ArrayList<Object> arrKhuyenMai = new ArrayList<Object>();
    ArrayList<Object> arrSanPham = new ArrayList<Object>();
    Object[] rowKM = null, rowSP = null;
    String slSan = null;
    public ThemHoaDon(String a) throws HeadlessException{
        initComponents();
        setLocationRelativeTo(null);
        this.user = a;
        loadKhuyenMaiAll();
        loadSanPhamAll();
    }

    public int checkChucVu() {
        NhanVienBUS bus = new NhanVienBUS();
        String chucVu = bus.getChucVu(user);
        if (chucVu.equals("Quản lý")) {
            return 1;
        } else if (chucVu.equals("Thu ngân")) {
            return 2;
        } else if (chucVu.equals("Bán hàng")) {
            return 3;
        } else {
            return 4;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        KhuyenMaiThem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableSanPham = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableKhuyenMai = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        SanPhamThem = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        AddKM = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SLMua = new javax.swing.JTextField();
        AddSP = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thêm hóa đơn");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(249, 255, 254));

        KhuyenMaiThem.setBackground(new java.awt.Color(180, 222, 197));
        KhuyenMaiThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        KhuyenMaiThem.setForeground(new java.awt.Color(0, 0, 0));
        KhuyenMaiThem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KM", "Tên KM", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        KhuyenMaiThem.setSelectionBackground(new java.awt.Color(196, 100, 96));
        KhuyenMaiThem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        KhuyenMaiThem.setShowGrid(true);
        KhuyenMaiThem.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(KhuyenMaiThem);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageText/tag/Hóa đơn.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageText/tag/Quay lại.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        TableSanPham.setBackground(new java.awt.Color(180, 222, 197));
        TableSanPham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TableSanPham.setForeground(new java.awt.Color(0, 0, 0));
        TableSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Mã phiếu nhập", "Tên sản phẩm", "Giá", "Loại SP", "Màu sắc", "SL sẵn", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableSanPham.setSelectionBackground(new java.awt.Color(196, 100, 96));
        TableSanPham.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableSanPham.setShowGrid(true);
        TableSanPham.getTableHeader().setReorderingAllowed(false);
        TableSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableSanPham);

        TableKhuyenMai.setBackground(new java.awt.Color(180, 222, 197));
        TableKhuyenMai.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TableKhuyenMai.setForeground(new java.awt.Color(0, 0, 0));
        TableKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã KM", "Tên KM", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableKhuyenMai.setSelectionBackground(new java.awt.Color(196, 100, 96));
        TableKhuyenMai.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableKhuyenMai.setShowGrid(true);
        TableKhuyenMai.getTableHeader().setReorderingAllowed(false);
        TableKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableKhuyenMaiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableKhuyenMai);

        SanPhamThem.setBackground(new java.awt.Color(180, 222, 197));
        SanPhamThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SanPhamThem.setForeground(new java.awt.Color(0, 0, 0));
        SanPhamThem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Mã phiếu nhập", "Tên sản phẩm", "Giá", "Loại SP", "Màu sắc", "SL sẵn", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        SanPhamThem.setSelectionBackground(new java.awt.Color(196, 100, 96));
        SanPhamThem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SanPhamThem.setShowGrid(true);
        SanPhamThem.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(SanPhamThem);

        jButton11.setBackground(new java.awt.Color(196, 100, 96));
        jButton11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("In HD");
        jButton11.setBorder(null);
        jButton11.setBorderPainted(false);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.setFocusPainted(false);
        jButton11.setRequestFocusEnabled(false);

        AddKM.setBackground(new java.awt.Color(196, 100, 96));
        AddKM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddKM.setForeground(new java.awt.Color(255, 255, 255));
        AddKM.setText("Thêm KM");
        AddKM.setBorder(null);
        AddKM.setBorderPainted(false);
        AddKM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddKM.setFocusPainted(false);
        AddKM.setRequestFocusEnabled(false);
        AddKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddKMActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Số lượng");

        SLMua.setBackground(new java.awt.Color(249, 255, 254));
        SLMua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SLMua.setForeground(new java.awt.Color(0, 0, 0));
        SLMua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SLMua.setCaretColor(new java.awt.Color(0, 0, 0));

        AddSP.setBackground(new java.awt.Color(196, 100, 96));
        AddSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddSP.setForeground(new java.awt.Color(255, 255, 255));
        AddSP.setText("Thêm SP");
        AddSP.setBorder(null);
        AddSP.setBorderPainted(false);
        AddSP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddSP.setFocusPainted(false);
        AddSP.setRequestFocusEnabled(false);
        AddSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSPActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Tổng tiền:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("0 VNĐ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(172, 172, 172)
                        .addComponent(jLabel5)
                        .addGap(94, 94, 94)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(797, 797, 797)
                                .addComponent(jLabel2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddKM, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(42, 42, 42)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(128, 128, 128)
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(SLMua, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(AddSP, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddKM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(SLMua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        hide();
        TraCuuHoaDon.main(user);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void TableKhuyenMaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableKhuyenMaiMouseClicked
        // TODO add your handling code here:
        int rowSelected = TableKhuyenMai.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableKhuyenMai.getModel();
        
        String ngbd = "", ngkt = "";
        if (model.getValueAt(rowSelected, 3) != null || model.getValueAt(rowSelected, 4) != null) {
            ngbd = model.getValueAt(rowSelected, 3).toString();
            ngkt = model.getValueAt(rowSelected, 4).toString();
        }
        String ma = model.getValueAt(rowSelected, 0).toString();
        int maKM = Integer.parseInt(ma);
        String tenKM = model.getValueAt(rowSelected, 1).toString();
        String phanTram = model.getValueAt(rowSelected, 2).toString();
        float phanTramKM = Float.parseFloat(phanTram);
        Object [] row = {maKM, tenKM, phanTramKM, ngbd, ngkt};
        rowKM = row;
    }//GEN-LAST:event_TableKhuyenMaiMouseClicked

    private void AddKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddKMActionPerformed
        // TODO add your handling code here:
        if (rowKM == null){
            JOptionPane.showMessageDialog(this,"Bạn chưa chọn khuyến mãi nào!","Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
        }
        int rowSelected = TableKhuyenMai.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableKhuyenMai.getModel();
        String ma = model.getValueAt(rowSelected, 0).toString();
        int maKMAdd = Integer.parseInt(ma);
        
        Object [] rowCheck = null;
        for (int i = 0; i < arrKhuyenMai.size(); i++) {
            rowCheck = (Object[]) arrKhuyenMai.get(i);
            int maKMCheck = (int) rowCheck[0];
            if (maKMAdd == maKMCheck) {
                JOptionPane.showMessageDialog(this,"Bạn đã thêm khuyến mãi này rồi!","Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
            }
        }
        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm khuyến mãi này?", "Xác nhận",JOptionPane.YES_NO_OPTION );
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }
        
        arrKhuyenMai.add(rowKM);
        themKhuyenMai();
        loadKhuyenMaiAll();
        rowKM = null;
    }//GEN-LAST:event_AddKMActionPerformed

    private void TableSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSanPhamMouseClicked
        // TODO add your handling code here:
        int rowSelected = TableSanPham.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
        String tenSP = (String) model.getValueAt(rowSelected, 1);
        String gia = model.getValueAt(rowSelected, 2).toString();
        String maLSP = model.getValueAt(rowSelected, 3).toString();
        String mauSac = (String) model.getValueAt(rowSelected, 4);
        slSan = model.getValueAt(rowSelected, 5).toString();
        String ghiChu = String.valueOf(model.getValueAt(rowSelected, 6));
        String maSP = model.getValueAt(rowSelected, 0).toString();
        Object [] row = {maSP, tenSP, gia, maLSP, mauSac, slSan, ghiChu};
        rowSP = row;
        
    }//GEN-LAST:event_TableSanPhamMouseClicked

    private void AddSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSPActionPerformed
        // TODO add your handling code here:
        if (rowSP == null){
            JOptionPane.showMessageDialog(this,"Bạn chưa chọn sản phẩm nào!","Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
        }
        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm sản phẩm này?", "Xác nhận",JOptionPane.YES_NO_OPTION );
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }
        
        if (SLMua.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Số lượng mua không được để trống","Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int slSanSP = Integer.parseInt(slSan);
        int slMuaSP = Integer.parseInt(SLMua.getText());
        if (slMuaSP > slSanSP) {
            JOptionPane.showMessageDialog(this,"Số lượng mua không được nhiều hơn số lượng có sẵn","Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
        }
        rowSP[5] = SLMua.getText();
        arrSanPham.add(rowSP);
        themSanPham();
        SLMua.setText("");
        
    }//GEN-LAST:event_AddSPActionPerformed

    public void themKhuyenMai() {
        String[] header = {"Mã KM", "Tên khuyến mãi", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        Object[] row = null;
        for (int i = 0; i < arrKhuyenMai.size(); i++) {
            row = (Object[]) arrKhuyenMai.get(i);
            dtm.addRow(row);
        }
        KhuyenMaiThem.setModel(dtm);
    }
    
    public void themSanPham() {
        String[] header = {"Mã SP", "Tên sản phẩm", "Giá", "Mã loại SP", "Màu sắc", "SL mua", "Ghi chú"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        Object[] row = null;
        for (int i = 0; i < arrSanPham.size(); i++) {
            row = (Object[]) arrSanPham.get(i);
            dtm.addRow(row);
        }
        SanPhamThem.setModel(dtm);
    }
    
    public void loadKhuyenMaiAll() {
        String[] header = {"Mã KM", "Tên khuyến mãi", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        ArrayList<KhuyenMai> arr = new ArrayList<KhuyenMai>();
        arr = KhuyenMaiBUS.getKhuyenMaiHopLeAll();
        KhuyenMai km = new KhuyenMai();
        for (int i = 0; i < arr.size(); i++) {
            km = arr.get(i);
            int maKM = km.getMaKM();
            String tenKM = km.getTenKM();
            float phanTram = km.getPhanTram();
            String ngbd = km.toString(km.getNgBD());
            String ngkt = km.toString(km.getNgKT());
            Object[] row = {maKM, tenKM, phanTram, ngbd, ngkt};
            dtm.addRow(row);
        }
        TableKhuyenMai.setModel(dtm);
        
    }
    
    public void loadSanPhamAll() {
        String[] header = {"Mã SP", "Tên sản phẩm", "Giá", "Mã loại SP", "Màu sắc", "SL sẵn", "Ghi chú"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        ArrayList<SanPham> arr = new ArrayList<SanPham>();
        arr = SanPhamBUS.getSanPhamAll();
        SanPham dt = new SanPham();
        for (int i = 0; i < arr.size(); i++) {
            dt = arr.get(i);
            int maSP = dt.getMaSP();
            String tenSP = dt.getTenSP();
            long gia = dt.getGiaSP();
            int maloaiSP = dt.getMaLoaiSP();
            String mausac = dt.getMauSac();
            int slsan = dt.getSlsan();
            String ghichu = dt.getGhiChu();
            Object[] row = {maSP, tenSP, gia, maloaiSP, mausac, slsan, ghichu};
            dtm.addRow(row);
        }
        TableSanPham.setModel(dtm);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemHoaDon(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddKM;
    private javax.swing.JButton AddSP;
    private javax.swing.JTable KhuyenMaiThem;
    private javax.swing.JTextField SLMua;
    private javax.swing.JTable SanPhamThem;
    private javax.swing.JTable TableKhuyenMai;
    private javax.swing.JTable TableSanPham;
    private javax.swing.JButton jButton11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
