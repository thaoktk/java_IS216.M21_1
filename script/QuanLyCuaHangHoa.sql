--ADD KHOA NGOAI
ALTER TABLE HOADON ADD CONSTRAINT FK_HOADON_NHAVIEN_01 FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV);
ALTER TABLE HOADON ADD CONSTRAINT FK_HOADON_KHACHHANG_01 FOREIGN KEY(MAKH) REFERENCES KHACHHANG(MAKH);
ALTER TABLE CTHD ADD CONSTRAINT FK_CTHD_SANPHAM_01 FOREIGN KEY(MASP) REFERENCES SANPHAM(MASP);
ALTER TABLE CTHD ADD CONSTRAINT FK_CTHD_HOADON_01 FOREIGN KEY(SOHD) REFERENCES HOADON(SOHD);
ALTER TABLE CTKM ADD CONSTRAINT FK_CTKM_HOADON_01 FOREIGN KEY(SOHD) REFERENCES HOADON(SOHD);
ALTER TABLE CTKM ADD CONSTRAINT FK_CTKM_KHUYENMAI_01 FOREIGN KEY(MAKM) REFERENCES KHUYENMAI(MAKM);
ALTER TABLE PHIEUNHAP ADD CONSTRAINT FK_PHIEUNHAP_NHANVIEN_01 FOREIGN KEY(MANV) REFERENCES NHANVIEN(MANV);
ALTER TABLE PHIEUNHAP ADD CONSTRAINT FK_PHIEUNHAP_NCC_01 FOREIGN KEY(MANCC) REFERENCES NHACUNGCAP(MANCC);
ALTER TABLE CTPN ADD CONSTRAINT FK_CTPN_SANPHAM_01 FOREIGN KEY(MASP) REFERENCES SANPHAM(MASP);
ALTER TABLE CTPN ADD CONSTRAINT FK_CTPN_PHIEUNHAP_01 FOREIGN KEY(MAPHIEUNHAP) REFERENCES PHIEUNHAP(MAPHIEUNHAP);

-- TRIGGER
--1. NGAY VAO LAM CUA NHAN VIEN PHAI LON HON NGAY SINH CUA NHAN VIEN DO!
CREATE OR REPLACE TRIGGER trigger_NgayVaoLamLonHonNgaySinh
AFTER INSERT OR UPDATE
ON NHANVIEN FOR EACH ROW
DECLARE
    var_ngaysinh NHANVIEN.NGAYSINH%TYPE;
    var_ngayvaolam NHANVIEN.NGAYVL%TYPE;
BEGIN
    SELECT NGAYSINH, NGAYVL INTO var_ngaysinh, var_ngayvaolam
    FROM NHANVIEN
    WHERE MANV = :NEW.MANV;
    
    IF(var_ngayvaolam <= var_ngaysinh) THEN
        DBMS_OUTPUT.PUT_LINE(N'ERROR: Ngày vào làm cua nhân viên này phai l?n h?n ngày sinh!');
        ROLLBACK;
    END IF;
END;

--KIEM TRA
ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY HH24:MI:SS';
INSERT INTO NHANVIEN VALUES ('NV111', N'MAI THAO TRINH', N'174 TRAN VAN NGO', '0325684412', '04/04/2022', N'THU NGÂN', 7500000, '12/03/2019', 200);

--3. SO GIO LAM CUA NHAN VIEN KHONG DUOC QUA 16GIO/NGAY
ALTER TABLE NHANVIEN ADD CONSTRAINT CHECK_SOGIOLAM CHECK(SOGIOLAM <= 16);

--4. SO LUONG MUA KHONG DUOC QUA SO LUONG CO SAN
    -- Bang CTHD
CREATE OR REPLACE TRIGGER trigger_CTHD_SoLuong
AFTER INSERT OR UPDATE
ON CTHD FOR EACH ROW
DECLARE 
    var_soluongsan SANPHAM.SLSAN%TYPE;
    var_soluongmua CTHD.SOLUONG%TYPE;
BEGIN
    SELECT SUM(SOLUONG) INTO var_soluongmua
    FROM CTHD
    WHERE MASP = :NEW.MASP
    GROUP BY MASP;
    
    SELECT SLSAN INTO var_soluongsan
    FROM SANPHAM
    WHERE MASP = :NEW.MASP;
    
    IF(var_soluongsan < var_soluongmua) THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: Khong con du so luong san pham nay trong kho!');
        ROLLBACK;
    END IF;
END;

    --BANG SANPHAM
CREATE OR REPLACE TRIGGER trigger_SP_Soluong
AFTER UPDATE
ON SANPHAM FOR EACH ROW
DECLARE
    var_soluongsan SANPHAM.SLSAN%TYPE;
    var_soluongmua CTHD.SOLUONG%TYPE;
BEGIN
    SELECT SUM(SOLUONG) INTO var_soluongmua
    FROM CTHD
    WHERE MASP = :NEW.MASP
    GROUP BY MASP;
    
    SELECT SLSAN INTO var_soluongsan
    FROM SANPHAM
    WHERE MASP = :NEW.MASP;
    
    IF(var_soluongsan < var_soluongmua) THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: Khong con du so luong san pham nay trong kho!');
        ROLLBACK;
    END IF;
END;

--5. TONG TIEN CUA HOA DON: TONGTIEN = SOLUONG*GIA
    -- Bang CTHD
CREATE OR REPLACE TRIGGER trigger_CTHD_TongTien
BEFORE INSERT
ON CTHD FOR EACH ROW
DECLARE
    var_tongtien HOADON.TONGTIEN%TYPE;
    var_soluong CTHD.SOLUONG%TYPE;
    var_gia SANPHAM.GIA%TYPE;
BEGIN
    SELECT SOLUONG INTO var_soluong
    FROM CTHD
    WHERE SOHD = :NEW.SOHD AND MASP = :NEW.MASP;
    
    SELECT GIA INTO var_gia
    FROM SANPHAM
    WHERE MASP = :NEW.MASP;
    
    SELECT TONGTIEN INTO var_tongtien
    FROM HOADON
    WHERE SOHD = :NEW.SOHD;
    
    UPDATE HOADON
    SET TONGTIEN = var_tongtien + var_soluong*var_gia
    WHERE SOHD = :NEW.SOHD;
END;
/

CREATE OR REPLACE TRIGGER trigger_CTHD_TongTien
BEFORE UPDATE
ON CTHD FOR EACH ROW
DECLARE
    var_tongtien HOADON.TONGTIEN%TYPE;
    var_soluongcu CTHD.SOLUONG%TYPE;
    var_soluongmoi CTHD.SOLUONG%TYPE;
    var_gia SANPHAM.GIA%TYPE;
BEGIN
    SELECT SOLUONG INTO var_soluongcu
    FROM CTHD
    WHERE SOHD = :OLD.SOHD AND MASP = :OLD.MASP;
    
    SELECT SOLUONG INTO var_soluongmoi
    FROM CTHD
    WHERE SOHD = :NEW.SOHD AND MASP = :NEW.MASP;
    
    SELECT GIA INTO var_gia
    FROM SANPHAM
    WHERE MASP = :NEW.MASP;
    
    SELECT TONGTIEN INTO var_tongtien
    FROM HOADON
    WHERE SOHD = :NEW.SOHD;
    
    UPDATE HOADON
    SET TONGTIEN = var_tongtien + var_soluongmoi*var_gia - var_soluongcu*var_gia
    WHERE SOHD = :NEW.SOHD;
END;
/

CREATE OR REPLACE TRIGGER trigger_CTHD_TongTien
BEFORE DELETE
ON CTHD FOR EACH ROW
DECLARE
    var_tongtien HOADON.TONGTIEN%TYPE;
    var_soluong CTHD.SOLUONG%TYPE;
    var_gia SANPHAM.GIA%TYPE;
BEGIN
    SELECT SOLUONG INTO var_soluong
    FROM CTHD
    WHERE SOHD = :OLD.SOHD AND MASP = :OLD.MASP;
    
    SELECT GIA INTO var_gia
    FROM SANPHAM
    WHERE MASP = :OLD.MASP;
    
    SELECT TONGTIEN INTO var_tongtien
    FROM HOADON
    WHERE SOHD = :OLD.SOHD;
    
    UPDATE HOADON
    SET TONGTIEN = var_tongtien - var_soluong*var_gia
    WHERE SOHD = :OLD.SOHD;
END;
/

    --Bang HOADON
CREATE OR REPLACE TRIGGER trigger_HoaDon_TongTien
BEFORE INSERT
ON HOADON FOR EACH ROW
DECLARE
BEGIN
    UPDATE HOADON
    SET TONGTIEN = 0
    WHERE SOHD = :NEW.SOHD;
END;
/

CREATE OR REPLACE TRIGGER trigger_HoaDon_TongTien
AFTER UPDATE
ON HOADON FOR EACH ROW
DECLARE
    var_tongtien HOADON.TONGTIEN%TYPE;
    var_tongthanhtien NUMBER :=0;
    var_cthd CTHD%ROWTYPE;
    var_gia SANPHAM.GIA%TYPE;
BEGIN
    SELECT TONGTIEN INTO var_tongtien
    FROM HOADON
    WHERE SOHD = :NEW.SOHD;
    
    FOR i IN(SELECT * INTO var_cthd FROM CTHD WHERE SOHD = :NEW.SOHD)
    LOOP
        var_cthd.SOLUONG := i.SOLUONG;
        var_cthd.MASP := i.MASP;
        
        SELECT GIA INTO var_gia
        FROM SANPHAM
        WHERE MASP = var_cthd.MASP;
        
        var_tongthanhtien := var_tongthanhtien + var_cthd.SOLUONG*var_gia;
    END LOOP;
    
    IF(var_tongtien != var_tongthanhtien) THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: Tong tien trong hoa don phai bang tong soluong*gia!');
        ROLLBACK;
    END IF;
END;
/

--7. LOAI KHACH HANG PHAI THUOC 1 TRONG 4 LOAI: CARE, NORM, VIP, LUX
ALTER TABLE KHACHHANG ADD CONSTRAINT CHECK_LOAIKH CHECK(LOAIKH IN('Care', 'Norm', 'VIP', 'Luxury'));

--8. TIEN KHUYEN MAI KHONG DUOC VUOT QUA TONG GIA TRI HOA DON
 ALTER TABLE KHUYENMAI ADD CHECK_KHUYENMAI CHECK(PHANTRAM <= 1);















